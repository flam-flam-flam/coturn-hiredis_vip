00:03:28.889 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:08:29.015 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:13:29.027 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:18:29.040 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:23:29.050 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:28:29.069 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:33:29.540 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:38:30.216 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:43:30.536 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:48:30.697 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:53:30.597 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
00:58:30.612 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:03:30.658 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:08:30.608 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:13:30.580 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:18:30.615 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:23:30.626 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:28:30.574 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:33:30.594 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:38:30.638 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:43:30.579 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:48:30.552 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:53:30.563 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
01:58:30.563 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:03:30.541 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:08:30.555 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:13:30.566 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:18:30.547 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:23:30.559 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:28:30.572 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:33:30.566 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:38:30.566 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:43:30.580 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:48:30.592 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:53:30.605 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
02:58:30.615 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:03:30.629 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:08:30.617 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:13:30.623 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:18:30.636 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:23:30.638 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:28:30.631 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:33:30.651 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:38:30.664 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:43:30.677 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:48:30.690 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:53:30.703 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
03:58:30.716 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:03:30.729 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:08:30.741 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:13:30.750 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:18:30.737 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:23:30.749 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:28:30.760 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:33:30.750 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:38:30.754 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:43:30.766 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:48:30.770 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:53:30.761 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
04:58:30.773 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:03:30.786 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:08:30.798 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:13:30.811 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:18:30.823 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:23:30.821 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:28:30.817 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:33:30.830 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:38:30.842 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:43:30.855 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:48:30.867 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:53:30.880 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
05:58:30.874 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:03:30.875 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:08:30.888 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:13:30.893 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:18:30.882 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:23:30.894 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:28:30.907 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:33:30.920 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:38:30.932 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:43:30.943 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:48:30.957 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:53:30.969 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
06:58:30.983 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:03:30.996 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:08:30.980 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:13:30.993 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:18:31.006 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:23:31.019 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:28:31.030 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:33:31.043 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:38:31.050 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:43:31.037 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:48:31.050 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:53:31.063 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
07:58:31.075 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:03:31.088 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:08:31.100 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:13:31.114 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:18:31.126 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:23:31.140 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:28:31.153 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:33:31.137 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:38:31.148 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:43:31.161 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:48:31.174 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:53:31.186 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
08:58:31.199 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:03:31.209 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:08:31.195 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:13:31.208 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:18:31.223 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:23:31.218 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:28:31.221 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:33:31.233 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:34:14.288 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df1160c1de6db14a76bd1] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566437659577"
}

09:34:14.296 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df1160c1de6db14a76bd1] doPush account:825285157 pushType:505
09:34:14.370 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df1160c1de6db14a76bd1] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:34:18.089 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df11a0c1de6db14a76bd2] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566437660722"
}

09:34:18.091 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df11a0c1de6db14a76bd2] doPush account:864289691 pushType:505
09:34:18.125 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df11a0c1de6db14a76bd2] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:38:31.246 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:41:02.650 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df2ae0c1de6db14a76bd3] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566438064915"
}

09:41:02.651 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df2ae0c1de6db14a76bd3] doPush account:864289691 pushType:505
09:41:02.807 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df2ae0c1de6db14a76bd3] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:43:31.258 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:46:13.435 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df3e50c1de6db14a76bd4] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566438378760"
}

09:46:13.437 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df3e50c1de6db14a76bd4] doPush account:825285157 pushType:505
09:46:13.484 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df3e50c1de6db14a76bd4] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:46:24.093 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df3f00c1de6db14a76bd5] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566438386706"
}

09:46:24.094 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df3f00c1de6db14a76bd5] doPush account:864289691 pushType:505
09:46:24.130 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df3f00c1de6db14a76bd5] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:48:31.271 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:52:57.662 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:38) - [lid:5d5df5790c1de6db14a76bd6] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566438782971"
}

09:52:57.663 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5df5790c1de6db14a76bd6] doPush account:825285157 pushType:505
09:52:57.702 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5df5790c1de6db14a76bd6] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
09:53:31.284 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
09:58:31.297 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:03:31.310 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:08:31.324 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:13:31.322 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:18:31.320 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:23:31.333 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:28:31.350 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:33:31.363 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:38:31.448 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:43:31.462 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:51:40.269 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
10:51:42.802 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ec267c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:51:43.276 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
10:51:44.766 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
10:51:44.797 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:51:44.927 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ec267c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:51:45.507 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
10:51:45.544 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
10:51:45.564 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
10:51:45.566 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
10:51:45.919 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
10:51:45.919 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2608 ms
10:51:47.436 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
10:51:47.437 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:51:47.449 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
10:51:47.449 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:51:47.751 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
10:51:48.758 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
10:51:48.877 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
10:51:49.063 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
10:51:49.063 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
10:51:49.508 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
10:51:49.509 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
10:51:50.270 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:51:50.399 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
10:51:50.400 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
10:51:50.400 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
10:51:50.400 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
10:51:50.401 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
10:51:50.401 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
10:51:50.401 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
10:51:50.944 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
10:51:50.951 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
10:51:50.957 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:51:50.971 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566442310963 with initial instances count: 28
10:51:50.973 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
10:51:50.974 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566442310974, current=UP, previous=STARTING]
10:51:50.984 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
10:51:50.998 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
10:51:51.098 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
10:51:51.132 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
10:51:51.135 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
10:51:51.138 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 10.682 seconds (JVM running for 16.465)
10:53:03.676 [http-nio-8822-exec-2] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:53:03.677 [http-nio-8822-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
10:53:03.697 [http-nio-8822-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 20 ms
10:53:03.920 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e038f0c1da0c436d43e88] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566442388914"
}

10:53:04.072 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e038f0c1da0c436d43e88] doPush account:825285157 pushType:505
10:53:04.558 [http-nio-8822-exec-2] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10:53:04.666 [http-nio-8822-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
10:53:04.668 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
10:53:04.683 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
10:53:04.748 [http-nio-8822-exec-2] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10:53:04.754 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2758a563
10:53:05.001 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e038f0c1da0c436d43e88] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
10:53:05.693 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10:56:50.431 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
10:57:31.820 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e049b0c1da0c436d43e89] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566442657082"
}

10:57:31.822 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e049b0c1da0c436d43e89] doPush account:825285157 pushType:505
10:57:31.859 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e049b0c1da0c436d43e89] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
10:58:50.165 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e04ea0c1da0c436d43e8a] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566442735517"
}

10:58:50.167 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e04ea0c1da0c436d43e8a] doPush account:825285157 pushType:505
10:58:50.198 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e04ea0c1da0c436d43e8a] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
10:59:11.422 [http-nio-8822-exec-8] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e04ff0c1da0c436d43e8b] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566442754079"
}

10:59:11.426 [http-nio-8822-exec-8] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e04ff0c1da0c436d43e8b] doPush account:864289691 pushType:505
10:59:11.459 [http-nio-8822-exec-8] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e04ff0c1da0c436d43e8b] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:01:50.446 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:04:22.681 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e06360c1da0c436d43e8c] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566443068039"
}

11:04:22.684 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e06360c1da0c436d43e8c] doPush account:825285157 pushType:505
11:04:22.728 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e06360c1da0c436d43e8c] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:06:50.458 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:08:42.326 [Thread-37] INFO  com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2.run(PollingServerListUpdater.java:53) - Shutting down the Executor Pool for PollingServerListUpdater
11:08:42.336 [Thread-29] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) - Unregistering application UM-CC with eureka with status DOWN
11:08:42.340 [Thread-29] WARN  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1303) - Saw local status change event StatusChangeEvent [timestamp=1566443322338, current=DOWN, previous=UP]
11:08:42.343 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:08:42.359 [Thread-29] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
11:08:42.361 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:08:42.455 [Thread-29] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:67) - Shutdown hook removed for: NFLoadBalancer-PingTimer-UM-PUSH
11:08:42.455 [Thread-29] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:72) - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_144]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_144]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) [netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
11:08:42.620 [Thread-29] INFO  com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888) - Shutting down DiscoveryClient ...
11:08:45.624 [Thread-29] INFO  com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922) - Unregistering ...
11:08:45.635 [Thread-29] INFO  com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:924) - DiscoveryClient_UM-CC/10.100.106.79:8822 - deregister  status: 200
11:08:45.725 [Thread-29] INFO  com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911) - Completed shut down of DiscoveryClient
11:09:28.452 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:09:31.197 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e9b5237c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:09:31.764 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:09:33.552 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:09:33.613 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:09:33.762 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e9b5237c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:09:34.409 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:09:34.468 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:09:34.491 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:09:34.492 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:09:34.917 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:09:34.919 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 3128 ms
11:09:36.592 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:09:36.593 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:09:36.616 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:09:36.617 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:09:37.094 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:09:38.373 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:09:38.515 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:09:38.748 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:09:38.750 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:09:39.067 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:09:39.068 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:09:39.676 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:09:39.795 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:09:39.795 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:09:39.796 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:09:39.796 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:09:39.797 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:09:39.797 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:09:39.797 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:09:40.221 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:09:40.232 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:09:40.238 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:09:40.249 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566443380245 with initial instances count: 28
11:09:40.252 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:09:40.253 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566443380253, current=UP, previous=STARTING]
11:09:40.258 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:09:40.294 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:09:40.349 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:09:40.405 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:09:40.407 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:09:40.413 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 11.657 seconds (JVM running for 16.49)
11:10:05.995 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:10:05.996 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:10:06.017 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 21 ms
11:10:06.633 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e078e0c1d9bfefb8b2e4c] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566443411201"
}

11:10:06.909 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:55) - [lid:5d5e078e0c1d9bfefb8b2e4c] pushStream: �        10�%Y   +   +
)

����
��É"1566443411201
11:10:06.910 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e078e0c1d9bfefb8b2e4c] doPush account:825285157 pushType:505
11:10:07.366 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:07.461 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:10:07.462 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:10:07.474 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:10:07.521 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:07.524 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@105a5bca
11:10:07.793 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e078e0c1d9bfefb8b2e4c] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:10:08.480 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:17.299 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:13:18.309 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) - HV000001: Hibernate Validator 6.0.17.Final
11:13:19.741 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822) - Application run failed
java.lang.NullPointerException: null
	at com.intellij.rt.coverage.data.ProjectData.touchLine(ProjectData.java:239) ~[?:?]
	at org.springframework.core.env.CommandLinePropertySource.<init>(CommandLinePropertySource.java:225) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.core.env.SimpleCommandLinePropertySource.<init>(SimpleCommandLinePropertySource.java:90) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.boot.DefaultApplicationArguments$Source.<init>(DefaultApplicationArguments.java:76) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.DefaultApplicationArguments.<init>(DefaultApplicationArguments.java:42) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:304) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:17) [classes/:?]
11:14:55.184 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:14:57.082 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822) - Application run failed
java.lang.NullPointerException: null
	at com.intellij.rt.coverage.data.ProjectData.touchLine(ProjectData.java:239) ~[?:?]
	at org.apache.logging.log4j.message.SimpleMessage.<init>(SimpleMessage.java:45) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.message.AbstractMessageFactory.newMessage(AbstractMessageFactory.java:59) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:2002) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1974) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.info(AbstractLogger.java:1311) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.lookup.Interpolator.handleError(Interpolator.java:150) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.lookup.Interpolator.<init>(Interpolator.java:124) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.AbstractConfiguration.<init>(AbstractConfiguration.java:126) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.xml.XmlConfiguration.<init>(XmlConfiguration.java:79) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory.getConfiguration(XmlConfigurationFactory.java:46) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:454) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:386) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory.getConfiguration(ConfigurationFactory.java:261) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:616) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:637) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.reinitialize(Log4J2LoggingSystem.java:188) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:73) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.initialize(Log4J2LoggingSystem.java:144) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:289) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:264) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:226) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:203) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:341) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:140) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:203) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:341) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:17) [classes/:?]
11:14:57.100 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822) - Application run failed
java.lang.NullPointerException: null
	at com.intellij.rt.coverage.data.ProjectData.touchLine(ProjectData.java:239) ~[?:?]
	at org.apache.logging.log4j.message.SimpleMessage.<init>(SimpleMessage.java:45) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.message.AbstractMessageFactory.newMessage(AbstractMessageFactory.java:59) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:2002) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1974) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.spi.AbstractLogger.info(AbstractLogger.java:1311) ~[log4j-api-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.lookup.Interpolator.handleError(Interpolator.java:150) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.lookup.Interpolator.<init>(Interpolator.java:124) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.AbstractConfiguration.<init>(AbstractConfiguration.java:126) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.xml.XmlConfiguration.<init>(XmlConfiguration.java:79) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory.getConfiguration(XmlConfigurationFactory.java:46) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:454) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:386) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.config.ConfigurationFactory.getConfiguration(ConfigurationFactory.java:261) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:616) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:637) ~[log4j-core-2.11.2.jar:2.11.2]
	at org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.reinitialize(Log4J2LoggingSystem.java:188) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:73) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.initialize(Log4J2LoggingSystem.java:144) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:289) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:264) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:226) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:203) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:341) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:140) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:203) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:341) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]
	at com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:17) [classes/:?]
11:15:50.450 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:15:52.787 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$788b2067] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:15:53.213 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:15:54.766 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:15:54.838 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:15:54.998 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$788b2067] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:15:56.161 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:15:56.252 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:15:56.286 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:15:56.287 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:15:56.811 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:15:56.812 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 3575 ms
11:15:58.048 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:15:58.049 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:15:58.061 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:15:58.062 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:15:58.516 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:16:00.028 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:16:00.179 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:16:00.351 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:16:00.352 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:16:00.692 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:16:00.692 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:16:01.372 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:16:01.500 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:16:01.501 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:16:01.501 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:16:01.502 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:16:01.502 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:16:01.502 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:16:01.503 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:16:01.986 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:16:01.995 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:16:02.002 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:16:02.017 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566443762012 with initial instances count: 28
11:16:02.021 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:16:02.024 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566443762024, current=UP, previous=STARTING]
11:16:02.035 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:16:02.050 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:16:02.149 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:16:02.223 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:16:02.224 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:16:02.230 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 11.543 seconds (JVM running for 15.272)
11:17:10.508 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:17:11.781 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba324b1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:17:12.119 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:17:13.020 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:17:13.043 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:17:13.122 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba324b1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:17:13.465 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:17:13.491 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:17:13.506 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:17:13.507 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:17:13.786 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:17:13.787 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1646 ms
11:17:14.750 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:17:14.751 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:17:14.759 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:17:14.759 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:17:15.005 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:17:15.857 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:17:15.926 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:17:16.044 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:17:16.045 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:17:16.272 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:17:16.273 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:17:16.678 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:17:16.775 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:17:16.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:17:16.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:17:16.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:17:16.777 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:17:16.778 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:17:16.778 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:17:17.075 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:17:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:17:17.087 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:17:17.094 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566443837092 with initial instances count: 29
11:17:17.096 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:17:17.096 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566443837096, current=UP, previous=STARTING]
11:17:17.098 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:17:17.118 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:17:17.155 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:17:17.179 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:17:17.180 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:17:17.183 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 6.593 seconds (JVM running for 8.963)
11:17:32.455 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:17:32.455 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:17:32.464 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 9 ms
11:17:32.701 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e094c0c1d792fe70302c4] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566443857736"
}

11:17:32.790 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e094c0c1d792fe70302c4] doPush account:825285157 pushType:505
11:17:33.085 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:33.142 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:17:33.143 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:17:33.152 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:17:33.185 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:33.188 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2bba3807
11:17:33.363 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e094c0c1d792fe70302c4] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:17:34.158 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:53.096 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e09610c1d792fe70302c5] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566443878449"
}

11:17:53.098 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e09610c1d792fe70302c5] doPush account:825285157 pushType:505
11:17:53.131 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e09610c1d792fe70302c5] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:17:59.929 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e09670c1d792fe70302c6] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566443882576"
}

11:17:59.931 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e09670c1d792fe70302c6] doPush account:864289691 pushType:505
11:17:59.958 [http-nio-8822-exec-3] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e09670c1d792fe70302c6] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:20:49.438 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:20:50.735 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11c54732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:51.135 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:20:52.019 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:20:52.043 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:52.114 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11c54732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:52.467 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:20:52.514 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:20:52.527 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:20:52.528 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:20:52.768 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:20:52.769 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1613 ms
11:20:53.653 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:20:53.654 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:20:53.659 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:20:53.660 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:20:53.843 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:20:54.509 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:20:54.579 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:20:54.663 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:20:54.664 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:20:54.828 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:20:54.829 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:20:55.161 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:20:55.259 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:20:55.259 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:20:55.260 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:20:55.260 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:20:55.260 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:20:55.260 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:20:55.260 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:20:55.630 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:20:55.634 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:20:55.638 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:20:55.645 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566444055644 with initial instances count: 29
11:20:55.647 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:20:55.647 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566444055647, current=UP, previous=STARTING]
11:20:55.651 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:20:55.667 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:20:55.708 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:20:55.719 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:20:55.721 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:20:55.725 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 6.197 seconds (JVM running for 8.858)
11:21:13.217 [http-nio-8822-exec-10] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:21:13.218 [http-nio-8822-exec-10] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:21:13.228 [http-nio-8822-exec-10] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 10 ms
11:21:13.404 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0a290c1df38510bd9659] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444078459"
}

11:21:13.508 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0a290c1df38510bd9659] doPush account:825285157 pushType:505
11:21:13.892 [http-nio-8822-exec-10] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:21:13.966 [http-nio-8822-exec-10] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:21:13.967 [http-nio-8822-exec-10] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:21:13.980 [http-nio-8822-exec-10] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:21:14.020 [http-nio-8822-exec-10] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:21:14.022 [http-nio-8822-exec-10] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4fef85d0
11:21:14.217 [http-nio-8822-exec-10] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0a290c1df38510bd9659] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:21:14.984 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:21:24.133 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0a340c1df38510bd965b] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 825285157
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 864289691
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444086769"
}

11:21:24.136 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0a340c1df38510bd965b] doPush account:864289691 pushType:505
11:21:24.169 [http-nio-8822-exec-6] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0a340c1df38510bd965b] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:25:55.264 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:26:41.176 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:26:43.347 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e302a0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:26:43.888 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:26:45.494 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:26:45.533 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:26:45.669 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e302a0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:26:46.515 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:26:46.560 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:26:46.582 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:26:46.585 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:26:46.903 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:26:46.904 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2984 ms
11:26:47.975 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:26:47.976 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:26:47.992 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:26:47.993 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:26:48.363 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:26:49.565 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:26:49.687 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:26:49.855 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:26:49.856 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:26:50.129 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:26:50.130 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:26:50.727 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:26:50.853 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:26:50.853 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:26:50.854 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:26:50.854 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:26:50.854 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:26:50.855 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:26:50.855 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:26:51.373 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:26:51.381 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:26:51.386 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:26:51.396 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566444411394 with initial instances count: 29
11:26:51.400 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:26:51.402 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566444411402, current=UP, previous=STARTING]
11:26:51.407 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:26:51.425 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:26:51.528 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:26:51.530 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:26:51.535 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 10.207 seconds (JVM running for 12.926)
11:26:51.560 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:27:09.753 [http-nio-8822-exec-2] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:27:09.754 [http-nio-8822-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:27:09.769 [http-nio-8822-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 15 ms
11:27:09.976 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0b8d0c1da341523dae0a] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444435022"
}

11:27:10.129 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:55) - [lid:5d5e0b8d0c1da341523dae0a] callRequest:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444435022"
}

11:27:10.136 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0b8d0c1da341523dae0a] doPush account:825285157 pushType:505
11:27:10.595 [http-nio-8822-exec-2] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:27:10.688 [http-nio-8822-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:27:10.690 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:27:10.704 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:27:10.755 [http-nio-8822-exec-2] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:27:10.759 [http-nio-8822-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2316cb61
11:27:11.359 [http-nio-8822-exec-2] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0b8d0c1da341523dae0a] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:27:11.712 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:30:38.208 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:30:39.944 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbd0a63d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:30:40.306 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:30:41.149 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:30:41.175 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:30:41.253 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbd0a63d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:30:41.616 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:30:41.647 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:30:41.667 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:30:41.668 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:30:41.954 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:30:41.955 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1632 ms
11:30:42.878 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:30:42.879 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:30:42.883 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:30:42.884 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:30:43.062 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:30:43.856 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:30:43.926 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:30:44.040 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:30:44.042 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:30:44.250 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:30:44.250 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:30:44.657 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:30:44.752 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:30:44.752 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:30:44.753 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:30:44.753 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:30:44.753 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:30:44.753 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:30:44.754 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:30:45.031 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:30:45.040 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:30:45.046 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:30:45.053 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566444645051 with initial instances count: 29
11:30:45.055 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:30:45.055 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566444645055, current=UP, previous=STARTING]
11:30:45.059 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:30:45.083 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:30:45.149 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:30:45.152 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:30:45.158 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 6.785 seconds (JVM running for 9.99)
11:30:45.164 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:31:10.417 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:31:10.418 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:31:10.426 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 8 ms
11:31:10.550 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0c7e0c1d98c2a253740b] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444675748"
}

11:31:10.617 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:55) - [lid22:5d5e0c7e0c1d98c2a253740b] callRequest22:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444675748"
}

11:31:10.619 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0c7e0c1d98c2a253740b] doPush account:825285157 pushType:505
11:31:10.886 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:31:10.967 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:31:10.970 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:31:10.987 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:31:11.032 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:31:11.035 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@260efa86
11:31:11.183 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0c7e0c1d98c2a253740b] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:31:11.993 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:33:22.524 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:33:24.680 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3d67b2e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:25.051 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:33:25.909 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:33:25.933 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:26.008 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3d67b2e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:26.327 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:33:26.347 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:33:26.363 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:33:26.365 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:33:26.637 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:33:26.638 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1559 ms
11:33:27.540 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:33:27.540 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:33:27.546 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:33:27.547 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:33:27.744 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:33:28.542 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:33:28.610 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:33:28.708 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:33:28.709 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:33:28.895 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:33:28.896 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:33:29.287 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:33:29.376 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:33:29.377 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:33:29.378 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:33:29.378 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:33:29.378 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:33:29.378 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:33:29.378 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:33:29.716 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:33:29.721 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:33:29.725 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:33:29.735 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566444809733 with initial instances count: 29
11:33:29.736 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:33:29.737 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566444809737, current=UP, previous=STARTING]
11:33:29.752 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:33:29.759 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:33:29.832 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:33:29.839 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:33:29.841 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:33:29.844 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 7.138 seconds (JVM running for 9.55)
11:33:50.756 [http-nio-8822-exec-9] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:33:50.757 [http-nio-8822-exec-9] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:33:50.765 [http-nio-8822-exec-9] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 8 ms
11:33:50.893 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0d1e0c1df36c32bfd8f8] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444836095"
}

11:33:50.978 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:55) - [lid33:5d5e0d1e0c1df36c32bfd8f8] callRequest33:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566444836095"
}

11:33:50.980 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0d1e0c1df36c32bfd8f8] doPush account:825285157 pushType:505
11:33:51.251 [http-nio-8822-exec-9] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:33:51.303 [http-nio-8822-exec-9] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:33:51.305 [http-nio-8822-exec-9] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:33:51.313 [http-nio-8822-exec-9] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:33:51.345 [http-nio-8822-exec-9] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:33:51.348 [http-nio-8822-exec-9] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@438dce5e
11:33:51.489 [http-nio-8822-exec-9] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0d1e0c1df36c32bfd8f8] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:33:52.320 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:38:29.412 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:40:23.644 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:40:25.603 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f85aec6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:40:26.029 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:40:27.262 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:40:27.296 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:40:27.416 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f85aec6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:40:27.979 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:40:28.013 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:40:28.033 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:40:28.035 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:40:28.327 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:40:28.328 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2272 ms
11:40:29.487 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:40:29.488 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:40:29.496 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:40:29.496 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:40:29.731 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:40:30.725 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:40:30.807 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:40:30.933 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:40:30.934 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:40:31.167 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:40:31.168 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:40:31.718 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:40:31.826 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:40:31.827 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:40:31.827 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:40:31.827 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:40:31.828 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:40:31.828 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:40:31.828 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:40:32.268 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:40:32.277 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:40:32.282 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:40:32.289 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566445232287 with initial instances count: 29
11:40:32.292 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:40:32.292 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566445232292, current=UP, previous=STARTING]
11:40:32.305 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:40:32.310 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:40:32.417 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:40:32.420 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:40:32.426 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 8.638 seconds (JVM running for 12.53)
11:40:32.440 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:40:54.935 [http-nio-8822-exec-7] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:40:54.936 [http-nio-8822-exec-7] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:40:54.946 [http-nio-8822-exec-7] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 10 ms
11:40:55.110 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0ec70c1d9229e0f7dca1] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445260250"
}

11:40:55.214 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:61) - [lid44:5d5e0ec70c1d9229e0f7dca1] callRequest44:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445260250"
}

11:40:55.218 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0ec70c1d9229e0f7dca1] doPush account:825285157 pushType:505
11:40:55.588 [http-nio-8822-exec-7] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:40:55.682 [http-nio-8822-exec-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:40:55.684 [http-nio-8822-exec-7] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:40:55.712 [http-nio-8822-exec-7] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:40:55.805 [http-nio-8822-exec-7] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:40:55.811 [http-nio-8822-exec-7] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@72e42561
11:40:56.041 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0ec70c1d9229e0f7dca1] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:40:56.720 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:42:26.829 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2.run(PollingServerListUpdater.java:53) - Shutting down the Executor Pool for PollingServerListUpdater
11:42:26.834 [Thread-23] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) - Unregistering application UM-CC with eureka with status DOWN
11:42:26.834 [Thread-23] WARN  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1303) - Saw local status change event StatusChangeEvent [timestamp=1566445346834, current=DOWN, previous=UP]
11:42:26.838 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:42:26.846 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:42:26.848 [Thread-23] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
11:42:26.861 [Thread-23] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:67) - Shutdown hook removed for: NFLoadBalancer-PingTimer-UM-PUSH
11:42:26.863 [Thread-23] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:72) - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_144]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_144]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) [netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029) [spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945) [spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]
11:42:26.881 [Thread-23] INFO  com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888) - Shutting down DiscoveryClient ...
11:42:38.438 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:42:39.907 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26b4b5fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:40.272 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:42:41.153 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:42:41.178 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:41.262 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26b4b5fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:41.611 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:42:41.630 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:42:41.675 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:42:41.676 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:42:41.878 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:42:41.878 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1586 ms
11:42:42.781 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:42:42.782 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:42:42.788 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:42:42.788 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:42:42.970 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:42:43.712 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:42:43.768 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:42:43.878 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:42:43.879 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:42:44.071 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:42:44.071 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:42:44.511 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:42:44.620 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:42:44.621 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:42:44.621 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:42:44.622 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:42:44.622 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:42:44.622 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:42:44.622 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:42:44.877 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:42:44.884 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:42:44.888 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:42:44.894 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566445364893 with initial instances count: 29
11:42:44.896 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:42:44.896 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566445364896, current=UP, previous=STARTING]
11:42:44.900 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:42:44.919 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:42:44.959 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:42:44.969 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:42:44.971 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:42:44.975 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 6.396 seconds (JVM running for 9.508)
11:42:50.229 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:42:50.230 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:42:50.237 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 7 ms
11:42:50.364 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e0f3a0c1dacff444aa744] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445375561"
}

11:42:50.437 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:60) - [lid33:5d5e0f3a0c1dacff444aa744] callRequest33:fromUser {
  userType: userId
  userValue {
    id: 864289691
  }
}
toUser {
  userType: sip
  userValue {
    id: 825285157
  }
}
callMethod: MESSAGE_STATE_CREATE
originalId: "1566445375561"

11:42:50.438 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:62) - [lid44:5d5e0f3a0c1dacff444aa744] callRequest44:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445375561"
}

11:42:50.440 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e0f3a0c1dacff444aa744] doPush account:825285157 pushType:505
11:42:50.738 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:42:50.789 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:42:50.791 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:42:50.802 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:42:50.837 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:42:50.840 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@31f8841a
11:42:50.993 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e0f3a0c1dacff444aa744] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:42:51.811 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:47:44.637 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:48:48.948 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:48:50.463 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bdcbbd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:48:50.915 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:48:51.998 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:48:52.026 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:48:52.120 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bdcbbd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:48:52.531 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:48:52.563 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:48:52.593 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:48:52.595 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:48:52.812 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:48:52.813 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1869 ms
11:48:54.070 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:48:54.070 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:48:54.078 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:48:54.079 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:48:54.292 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:48:55.083 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:48:55.144 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:48:55.252 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:48:55.252 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:48:55.441 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:48:55.442 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:48:55.878 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:48:56.163 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:48:56.165 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:48:56.165 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:48:56.166 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:48:56.167 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:48:56.167 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:48:56.167 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:48:56.511 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:48:56.521 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:48:56.525 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:48:56.531 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566445736529 with initial instances count: 29
11:48:56.533 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:48:56.534 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566445736534, current=UP, previous=STARTING]
11:48:56.538 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:48:56.553 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:48:56.602 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:48:56.614 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:48:56.615 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:48:56.619 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 7.56 seconds (JVM running for 10.613)
11:49:04.706 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:49:04.707 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:49:04.720 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 13 ms
11:49:04.862 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e10b00c1da2f2c3a9f1ab] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445750037"
}

11:49:04.931 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:62) - [lid55:5d5e10b00c1da2f2c3a9f1ab] callRequest55:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566445750037"
}

11:49:04.934 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e10b00c1da2f2c3a9f1ab] doPush account:825285157 pushType:505
11:49:05.244 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:49:05.290 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:49:05.292 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:49:05.300 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:49:05.336 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:49:05.339 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77bc5f9f
11:49:05.485 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e10b00c1da2f2c3a9f1ab] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:49:06.306 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:53:15.629 [main] INFO  com.ukelink.voip.UmCc.UmCcApplication.main(UmCcApplication.java:16) - umcc start running
11:53:17.862 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8434ee08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:53:18.266 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647) - No active profile set, falling back to default profiles: default
11:53:19.186 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e84d21fb-96f0-37ff-9181-311ebed85e2a
11:53:19.216 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'com.ukelink.voip.UmCc.feign.PushFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:53:19.325 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8434ee08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:53:19.652 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8822 (http)
11:53:19.674 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8822"]
11:53:19.690 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
11:53:19.691 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.22]
11:53:19.965 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
11:53:19.966 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1674 ms
11:53:20.977 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:53:20.978 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:53:20.983 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
11:53:20.983 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:53:21.184 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
11:53:22.041 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
11:53:22.099 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
11:53:22.190 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
11:53:22.191 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
11:53:22.359 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
11:53:22.360 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
11:53:22.707 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
11:53:22.809 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
11:53:22.809 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
11:53:22.810 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
11:53:22.810 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
11:53:22.811 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
11:53:22.811 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
11:53:22.811 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
11:53:23.188 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
11:53:23.195 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
11:53:23.199 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:53:23.205 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1566446003203 with initial instances count: 29
11:53:23.207 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UM-CC with eureka with status UP
11:53:23.208 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1566446003208, current=UP, previous=STARTING]
11:53:23.212 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_UM-CC/10.100.106.79:8822: registering service...
11:53:23.226 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8822"]
11:53:23.274 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_UM-CC/10.100.106.79:8822 - registration status: 204
11:53:23.284 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 8822 (http) with context path ''
11:53:23.285 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:143) - Updating port to 8822
11:53:23.288 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started UmCcApplication in 7.531 seconds (JVM running for 10.083)
11:53:32.131 [http-nio-8822-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:53:32.131 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
11:53:32.140 [http-nio-8822-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 9 ms
11:53:32.305 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e11bc0c1d41e229eb213f] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566446017190"
}

11:53:32.388 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:60) - [lid66:5d5e11bc0c1d41e229eb213f] callRequest66:fromUser {
  userType: userId
  userValue {
    id: 864289691
  }
}
toUser {
  userType: sip
  userValue {
    id: 825285157
  }
}
callMethod: MESSAGE_STATE_CREATE
originalId: "1566446017190"
indexId: "5d5e11bc0c1d41e229eb213f"
callId: "5d5e11bc0c1d41e229eb2140"

11:53:32.389 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:62) - [lid55:5d5e11bc0c1d41e229eb213f] callRequest55:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566446017190"
  indexId: "5d5e11bc0c1d41e229eb213f"
  callId: "5d5e11bc0c1d41e229eb2140"
}

11:53:32.395 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e11bc0c1d41e229eb213f] doPush account:825285157 pushType:505
11:53:32.723 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:53:32.939 [http-nio-8822-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-UM-PUSH
11:53:32.941 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:197) - Client: UM-PUSH instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:53:32.957 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
11:53:33.056 [http-nio-8822-exec-1] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:53:33.059 [http-nio-8822-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client UM-PUSH initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=UM-PUSH,current list of Servers=[10.100.93.47:8101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.100.93.47:8101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@d366512
11:53:33.259 [http-nio-8822-exec-1] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e11bc0c1d41e229eb213f] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
11:53:33.965 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: UM-PUSH.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:58:22.849 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:03:22.863 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:08:22.875 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:13:22.874 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:18:22.875 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:23:22.888 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:28:22.902 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:33:22.915 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:38:22.928 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:43:22.940 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:48:22.953 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:53:22.966 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
12:58:22.979 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:03:22.983 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:08:22.966 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:13:22.957 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:18:22.970 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:23:22.982 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:28:22.996 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:33:23.008 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:38:23.022 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:40:04.108 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e2ab40c1d41e229eb2141] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566452409454"
}

13:40:04.125 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:60) - [lid66:5d5e2ab40c1d41e229eb2141] callRequest66:fromUser {
  userType: userId
  userValue {
    id: 864289691
  }
}
toUser {
  userType: sip
  userValue {
    id: 825285157
  }
}
callMethod: MESSAGE_STATE_CREATE
originalId: "1566452409454"
indexId: "5d5e2ab40c1d41e229eb2141"
callId: "5d5e2ab40c1d41e229eb2142"

13:40:04.157 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:62) - [lid55:5d5e2ab40c1d41e229eb2141] callRequest55:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566452409454"
  indexId: "5d5e2ab40c1d41e229eb2141"
  callId: "5d5e2ab40c1d41e229eb2142"
}

13:40:04.160 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e2ab40c1d41e229eb2141] doPush account:825285157 pushType:505
13:40:04.226 [http-nio-8822-exec-5] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e2ab40c1d41e229eb2141] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
13:40:04.225 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:37) - [lid:5d5e2ab40c1d41e229eb2143] insertGroupMember() requestBody: callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566452409671"
}

13:40:04.241 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:60) - [lid66:5d5e2ab40c1d41e229eb2143] callRequest66:fromUser {
  userType: userId
  userValue {
    id: 864289691
  }
}
toUser {
  userType: sip
  userValue {
    id: 825285157
  }
}
callMethod: MESSAGE_STATE_CREATE
originalId: "1566452409671"
indexId: "5d5e2ab40c1d41e229eb2143"
callId: "5d5e2ab40c1d41e229eb2144"

13:40:04.242 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.controller.CallController.acceptInvite(CallController.java:62) - [lid55:5d5e2ab40c1d41e229eb2143] callRequest55:callInfo {
  fromUser {
    userType: userId
    userValue {
      id: 864289691
    }
  }
  toUser {
    userType: sip
    userValue {
      id: 825285157
    }
  }
  callMethod: MESSAGE_STATE_CREATE
  originalId: "1566452409671"
  indexId: "5d5e2ab40c1d41e229eb2143"
  callId: "5d5e2ab40c1d41e229eb2144"
}

13:40:04.243 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:28) - [logId:5d5e2ab40c1d41e229eb2143] doPush account:825285157 pushType:505
13:40:04.279 [http-nio-8822-exec-7] INFO  com.ukelink.voip.UmCc.service.Impl.PushServiceImpl.push(PushServiceImpl.java:36) - [logId:5d5e2ab40c1d41e229eb2143] pushIm  res:[{resultCode=00000000, resultDesc=Success, data=null}]
13:43:23.035 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:48:23.048 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:53:23.061 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
13:58:23.075 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:03:23.085 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:08:23.102 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:13:23.096 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:18:23.079 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:23:23.083 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:28:23.096 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:33:23.111 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:38:23.124 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:43:23.137 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:48:23.151 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:53:23.164 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
14:58:23.178 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
15:03:23.178 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
15:08:23.173 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
15:13:23.187 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
15:18:23.703 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
15:23:23.718 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
